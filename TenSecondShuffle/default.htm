<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Ten Second Shuffle</title>

    <!-- Global RuleSet Definitions -->
    <script src="js/BrowserPolyFills.js" type="text/ecmascript"></script>
    <script src="js/Math.js" type="text/ecmascript"></script>
    <script src="js/GlobalRuleSet.js" type="text/ecmascript"></script>

    <!-- Graphics Engine and Sprite Tree -->
    <script src="js/DrawingContext2D.js" type="text/ecmascript"></script>
    <script src="js/Sprite.js" type="text/ecmascript"></script>
    <script src="js/GameHostSprite.js" type="text/ecmascript"></script>
    <script src="js/GameRootSprite.js" type="text/ecmascript"></script>
    <script src="js/FrameSprite.js" type="text/ecmascript"></script>
    <script src="js/ImageSprite.js" type="text/ecmascript"></script>
    <script src="js/CircleSprite.js" type="text/ecmascript"></script>
    <script src="js/DashedCircleSprite.js" type="text/ecmascript"></script>
    <script src="js/TextSprite.js" type="text/ecmascript"></script>

    <!-- Game Common -->
    <script src="js/Game.js" type="text/ecmascript"></script>

    <!-- Click Sequence Game -->
    <script src="js/ClickSequence/ClickSequenceGame.js" type="text/ecmascript"></script>
    <script src="js/ClickSequence/ClickSequenceSprite.js" type="text/ecmascript"></script>

    <!-- Color Pairs Game -->
    <script src="js/ColorPair/ColorPairGame.js" type="text/ecmascript"></script>
    <script src="js/ColorPair/ColorPairSprite.js" type="text/ecmascript"></script>

    <!-- Bubbler Blower Game-->
    <script src="js/BubbleBlower/BubbleBlowerGame.js" type="text/ecmascript"></script>
    
    <script>
        var games = [
            {
                id: "clickseq", title: "Click Sequence", factory: ClickSequenceGame, instance: null, rootSprite: null,
                help: "Select the targets in increasing order.", titleImage: "imgSquare"
            },
            {
                id: "bubbleblow", title: "Bubble Blower", factory: BubbleBlowerGame, instance: null, rootSprite: null,
                help: "Click or Tap to Blow a Bubble, but not too large.", titleImage: "imgSquare"
            },
            {
                id: "colorpair", title: "Color Pair", factory: ColorPairGame, instance: null, rootSprite: null,
                help: "Click or Tap pairs of the same color.", titleImage: "imgSquare"
            },
        ];

        var drawingContext;

        function applyRules() {
            if (GlobalRuleSet.RandomizeGameOrder) {
                var newGames = [].concat(games);
                games = [];

                while (newGames.length > 0) {
                    var entry = Math.randomIntIndex(newGames.length);
                    games.push(newGames.splice(entry, 1)[0]);
                }
            }

            if (GlobalRuleSet.Debug && window.location.hash.length > 0) {
                var potentialGameId = window.location.hash.substr(1);
                for (var i = 1; i < games.length; i++) {
                    var game = games[i];
                    if (game.id === potentialGameId) {
                        games.unshift(games.splice(i, 1)[0]);
                        break;
                    }
                }
            }
        }

        function init() {
            applyRules();

            drawingContext = new DrawingContext2D(document.getElementById("renderTarget"));

            // Builds out the base sprite tree which contains the background layers, game host and HUD.
            setupSpriteTree();

            requestAnimationFrame(render);
        }

        function setupSpriteTree() {
            var rootSprite = new Sprite(0, 0);
            this.drawingContext.rootSprite = rootSprite;

            // Layer tree
            rootSprite.addNamedChild("backgroundLayer", new Sprite(0, 0));

            var activationContext = {
                renderTargetElement: document.getElementById("renderTarget"),
                menu: null,
                services: null
            };
            rootSprite.addNamedChild("gameHostLayer", new Sprite(0, 0));
            rootSprite.addNamedChild("hudLayer", new Sprite(0, 0));

            // Background Layer Setup

            // Hud Layer Setup

            // Game Switcher Setup, lower pivot is rotated, upper pivot is offset back to center y, game host root is offset back to top left 0 point.
            rootSprite.gameHostLayer.addNamedChild("gameHost", new GameHostSprite(activationContext, 0, 0));

            // Game Setup
            for (var i = 0; i < games.length; i++) {
                var gameDescriptor = games[i];

                // Connect the name to the actual image
                gameDescriptor.titleImage = document.getElementById(gameDescriptor.titleImage);

                // Connect the game descriptor to a root sprite and and game instance
                gameDescriptor.rootSprite = new GameRootSprite(0, 0);
                gameDescriptor.instance = new gameDescriptor.factory(gameDescriptor.rootSprite);

                // Initialize the game root sprite and game
                gameDescriptor.rootSprite.init(gameDescriptor.instance);
                gameDescriptor.instance.init(gameDescriptor);

                // Attach the game root sprite to the game host sprite
                rootSprite.gameHostLayer.gameHost.addGame(gameDescriptor);
            }
        }

        function render() {
            update();
            draw();

            requestAnimationFrame(render);
        }

        function update() {
            // drawingContext.rootSprite.gameHostLayer.pivot.rotation = Math.sin(new Date() / 1000) * Math.PI / 24;

            // Pass updates through the visual sprite tree, a GameRootSprite will talk to the game itself.
            drawingContext.rootSprite.update();
        }

        function draw() {
            this.drawingContext.beginDraw();
            this.drawingContext.clear();
            this.drawingContext.rootSprite.draw(this.drawingContext);
            this.drawingContext.endDraw();
        }
    </script>
</head>
<body onload="init();">
    <h1>
        <center>Welcome to Ludum Dare 27 and Ten Second Shuffle</center>
    </h1>

    <canvas id="renderTarget" width="1024" height="768" style="background-color: white;"></canvas>

    <div style="display: none">
        <img id="imgSquare" src="images/stock/square.png" />
    </div>
</body>
</html>
